#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FogUM
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="BDF")]
	public partial class DBLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertVOLUNTARIADO(VOLUNTARIADO instance);
    partial void UpdateVOLUNTARIADO(VOLUNTARIADO instance);
    partial void DeleteVOLUNTARIADO(VOLUNTARIADO instance);
    partial void InsertCOMANDANTE(COMANDANTE instance);
    partial void UpdateCOMANDANTE(COMANDANTE instance);
    partial void DeleteCOMANDANTE(COMANDANTE instance);
    partial void InsertCONCELHO(CONCELHO instance);
    partial void UpdateCONCELHO(CONCELHO instance);
    partial void DeleteCONCELHO(CONCELHO instance);
    partial void InsertCORPFOGO(CORPFOGO instance);
    partial void UpdateCORPFOGO(CORPFOGO instance);
    partial void DeleteCORPFOGO(CORPFOGO instance);
    partial void InsertDEPOSITO(DEPOSITO instance);
    partial void UpdateDEPOSITO(DEPOSITO instance);
    partial void DeleteDEPOSITO(DEPOSITO instance);
    partial void InsertDISTRITO(DISTRITO instance);
    partial void UpdateDISTRITO(DISTRITO instance);
    partial void DeleteDISTRITO(DISTRITO instance);
    partial void InsertESTADO_FOGO(ESTADO_FOGO instance);
    partial void UpdateESTADO_FOGO(ESTADO_FOGO instance);
    partial void DeleteESTADO_FOGO(ESTADO_FOGO instance);
    partial void InsertFOGO(FOGO instance);
    partial void UpdateFOGO(FOGO instance);
    partial void DeleteFOGO(FOGO instance);
    partial void InsertHELI(HELI instance);
    partial void UpdateHELI(HELI instance);
    partial void DeleteHELI(HELI instance);
    partial void InsertHELIFOGO(HELIFOGO instance);
    partial void UpdateHELIFOGO(HELIFOGO instance);
    partial void DeleteHELIFOGO(HELIFOGO instance);
    partial void InsertRELATORIO(RELATORIO instance);
    partial void UpdateRELATORIO(RELATORIO instance);
    partial void DeleteRELATORIO(RELATORIO instance);
    partial void InsertTIPOS_DEPO(TIPOS_DEPO instance);
    partial void UpdateTIPOS_DEPO(TIPOS_DEPO instance);
    partial void DeleteTIPOS_DEPO(TIPOS_DEPO instance);
    partial void InsertCORPORACAO(CORPORACAO instance);
    partial void UpdateCORPORACAO(CORPORACAO instance);
    partial void DeleteCORPORACAO(CORPORACAO instance);
    #endregion
		
		public DBLinqDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BDFConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<VOLUNTARIADO> VOLUNTARIADOs
		{
			get
			{
				return this.GetTable<VOLUNTARIADO>();
			}
		}
		
		public System.Data.Linq.Table<COMANDANTE> COMANDANTEs
		{
			get
			{
				return this.GetTable<COMANDANTE>();
			}
		}
		
		public System.Data.Linq.Table<CONCELHO> CONCELHOs
		{
			get
			{
				return this.GetTable<CONCELHO>();
			}
		}
		
		public System.Data.Linq.Table<CORPFOGO> CORPFOGOs
		{
			get
			{
				return this.GetTable<CORPFOGO>();
			}
		}
		
		public System.Data.Linq.Table<DEPOSITO> DEPOSITOs
		{
			get
			{
				return this.GetTable<DEPOSITO>();
			}
		}
		
		public System.Data.Linq.Table<DISTRITO> DISTRITOs
		{
			get
			{
				return this.GetTable<DISTRITO>();
			}
		}
		
		public System.Data.Linq.Table<ESTADO_FOGO> ESTADO_FOGOs
		{
			get
			{
				return this.GetTable<ESTADO_FOGO>();
			}
		}
		
		public System.Data.Linq.Table<FOGO> FOGOs
		{
			get
			{
				return this.GetTable<FOGO>();
			}
		}
		
		public System.Data.Linq.Table<HELI> HELIs
		{
			get
			{
				return this.GetTable<HELI>();
			}
		}
		
		public System.Data.Linq.Table<HELIFOGO> HELIFOGOs
		{
			get
			{
				return this.GetTable<HELIFOGO>();
			}
		}
		
		public System.Data.Linq.Table<RELATORIO> RELATORIOs
		{
			get
			{
				return this.GetTable<RELATORIO>();
			}
		}
		
		public System.Data.Linq.Table<TIPOS_DEPO> TIPOS_DEPOs
		{
			get
			{
				return this.GetTable<TIPOS_DEPO>();
			}
		}
		
		public System.Data.Linq.Table<CORPORACAO> CORPORACAOs
		{
			get
			{
				return this.GetTable<CORPORACAO>();
			}
		}
	}
	
	[Table(Name="dbo.VOLUNTARIADO")]
	public partial class VOLUNTARIADO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _COD_VOLUNTARIO;
		
		private int _COD_DISTRITO;
		
		private string _NOME_VOLUNTARIO;
		
		private string _NUM_TELEFONE;
		
		private string _EMAIL;
		
		private decimal _DISPONIBILIDADE;
		
		private EntityRef<DISTRITO> _DISTRITO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOD_VOLUNTARIOChanging(int value);
    partial void OnCOD_VOLUNTARIOChanged();
    partial void OnCOD_DISTRITOChanging(int value);
    partial void OnCOD_DISTRITOChanged();
    partial void OnNOME_VOLUNTARIOChanging(string value);
    partial void OnNOME_VOLUNTARIOChanged();
    partial void OnNUM_TELEFONEChanging(string value);
    partial void OnNUM_TELEFONEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnDISPONIBILIDADEChanging(decimal value);
    partial void OnDISPONIBILIDADEChanged();
    #endregion
		
		public VOLUNTARIADO()
		{
			this._DISTRITO = default(EntityRef<DISTRITO>);
			OnCreated();
		}
		
		[Column(Storage="_COD_VOLUNTARIO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int COD_VOLUNTARIO
		{
			get
			{
				return this._COD_VOLUNTARIO;
			}
			set
			{
				if ((this._COD_VOLUNTARIO != value))
				{
					this.OnCOD_VOLUNTARIOChanging(value);
					this.SendPropertyChanging();
					this._COD_VOLUNTARIO = value;
					this.SendPropertyChanged("COD_VOLUNTARIO");
					this.OnCOD_VOLUNTARIOChanged();
				}
			}
		}
		
		[Column(Storage="_COD_DISTRITO", DbType="Int NOT NULL")]
		public int COD_DISTRITO
		{
			get
			{
				return this._COD_DISTRITO;
			}
			set
			{
				if ((this._COD_DISTRITO != value))
				{
					if (this._DISTRITO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCOD_DISTRITOChanging(value);
					this.SendPropertyChanging();
					this._COD_DISTRITO = value;
					this.SendPropertyChanged("COD_DISTRITO");
					this.OnCOD_DISTRITOChanged();
				}
			}
		}
		
		[Column(Storage="_NOME_VOLUNTARIO", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NOME_VOLUNTARIO
		{
			get
			{
				return this._NOME_VOLUNTARIO;
			}
			set
			{
				if ((this._NOME_VOLUNTARIO != value))
				{
					this.OnNOME_VOLUNTARIOChanging(value);
					this.SendPropertyChanging();
					this._NOME_VOLUNTARIO = value;
					this.SendPropertyChanged("NOME_VOLUNTARIO");
					this.OnNOME_VOLUNTARIOChanged();
				}
			}
		}
		
		[Column(Storage="_NUM_TELEFONE", DbType="Char(9) NOT NULL", CanBeNull=false)]
		public string NUM_TELEFONE
		{
			get
			{
				return this._NUM_TELEFONE;
			}
			set
			{
				if ((this._NUM_TELEFONE != value))
				{
					this.OnNUM_TELEFONEChanging(value);
					this.SendPropertyChanging();
					this._NUM_TELEFONE = value;
					this.SendPropertyChanged("NUM_TELEFONE");
					this.OnNUM_TELEFONEChanged();
				}
			}
		}
		
		[Column(Storage="_EMAIL", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[Column(Storage="_DISPONIBILIDADE", DbType="Decimal(8,0) NOT NULL")]
		public decimal DISPONIBILIDADE
		{
			get
			{
				return this._DISPONIBILIDADE;
			}
			set
			{
				if ((this._DISPONIBILIDADE != value))
				{
					this.OnDISPONIBILIDADEChanging(value);
					this.SendPropertyChanging();
					this._DISPONIBILIDADE = value;
					this.SendPropertyChanged("DISPONIBILIDADE");
					this.OnDISPONIBILIDADEChanged();
				}
			}
		}
		
		[Association(Name="DISTRITO_VOLUNTARIADO", Storage="_DISTRITO", ThisKey="COD_DISTRITO", IsForeignKey=true)]
		public DISTRITO DISTRITO
		{
			get
			{
				return this._DISTRITO.Entity;
			}
			set
			{
				DISTRITO previousValue = this._DISTRITO.Entity;
				if (((previousValue != value) 
							|| (this._DISTRITO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DISTRITO.Entity = null;
						previousValue.VOLUNTARIADOs.Remove(this);
					}
					this._DISTRITO.Entity = value;
					if ((value != null))
					{
						value.VOLUNTARIADOs.Add(this);
						this._COD_DISTRITO = value.COD_DISTRITO;
					}
					else
					{
						this._COD_DISTRITO = default(int);
					}
					this.SendPropertyChanged("DISTRITO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.COMANDANTE")]
	public partial class COMANDANTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _COD_COMANDANTE;
		
		private string _USERNAME;
		
		private string _PASSWORD;
		
		private string _NOME;
		
		private EntitySet<FOGO> _FOGOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOD_COMANDANTEChanging(int value);
    partial void OnCOD_COMANDANTEChanged();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnNOMEChanging(string value);
    partial void OnNOMEChanged();
    #endregion
		
		public COMANDANTE()
		{
			this._FOGOs = new EntitySet<FOGO>(new Action<FOGO>(this.attach_FOGOs), new Action<FOGO>(this.detach_FOGOs));
			OnCreated();
		}
		
		[Column(Storage="_COD_COMANDANTE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int COD_COMANDANTE
		{
			get
			{
				return this._COD_COMANDANTE;
			}
			set
			{
				if ((this._COD_COMANDANTE != value))
				{
					this.OnCOD_COMANDANTEChanging(value);
					this.SendPropertyChanging();
					this._COD_COMANDANTE = value;
					this.SendPropertyChanged("COD_COMANDANTE");
					this.OnCOD_COMANDANTEChanged();
				}
			}
		}
		
		[Column(Storage="_USERNAME", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[Column(Storage="_PASSWORD", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[Column(Storage="_NOME", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NOME
		{
			get
			{
				return this._NOME;
			}
			set
			{
				if ((this._NOME != value))
				{
					this.OnNOMEChanging(value);
					this.SendPropertyChanging();
					this._NOME = value;
					this.SendPropertyChanged("NOME");
					this.OnNOMEChanged();
				}
			}
		}
		
		[Association(Name="COMANDANTE_FOGO", Storage="_FOGOs", OtherKey="COD_COMANDANTE")]
		public EntitySet<FOGO> FOGOs
		{
			get
			{
				return this._FOGOs;
			}
			set
			{
				this._FOGOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FOGOs(FOGO entity)
		{
			this.SendPropertyChanging();
			entity.COMANDANTE = this;
		}
		
		private void detach_FOGOs(FOGO entity)
		{
			this.SendPropertyChanging();
			entity.COMANDANTE = null;
		}
	}
	
	[Table(Name="dbo.CONCELHO")]
	public partial class CONCELHO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _COD_CONCELHO;
		
		private string _CONCELHO_DESIGN;
		
		private EntitySet<FOGO> _FOGOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOD_CONCELHOChanging(int value);
    partial void OnCOD_CONCELHOChanged();
    partial void OnCONCELHO_DESIGNChanging(string value);
    partial void OnCONCELHO_DESIGNChanged();
    #endregion
		
		public CONCELHO()
		{
			this._FOGOs = new EntitySet<FOGO>(new Action<FOGO>(this.attach_FOGOs), new Action<FOGO>(this.detach_FOGOs));
			OnCreated();
		}
		
		[Column(Storage="_COD_CONCELHO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int COD_CONCELHO
		{
			get
			{
				return this._COD_CONCELHO;
			}
			set
			{
				if ((this._COD_CONCELHO != value))
				{
					this.OnCOD_CONCELHOChanging(value);
					this.SendPropertyChanging();
					this._COD_CONCELHO = value;
					this.SendPropertyChanged("COD_CONCELHO");
					this.OnCOD_CONCELHOChanged();
				}
			}
		}
		
		[Column(Storage="_CONCELHO_DESIGN", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CONCELHO_DESIGN
		{
			get
			{
				return this._CONCELHO_DESIGN;
			}
			set
			{
				if ((this._CONCELHO_DESIGN != value))
				{
					this.OnCONCELHO_DESIGNChanging(value);
					this.SendPropertyChanging();
					this._CONCELHO_DESIGN = value;
					this.SendPropertyChanged("CONCELHO_DESIGN");
					this.OnCONCELHO_DESIGNChanged();
				}
			}
		}
		
		[Association(Name="CONCELHO_FOGO", Storage="_FOGOs", OtherKey="COD_CONCELHO")]
		public EntitySet<FOGO> FOGOs
		{
			get
			{
				return this._FOGOs;
			}
			set
			{
				this._FOGOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FOGOs(FOGO entity)
		{
			this.SendPropertyChanging();
			entity.CONCELHO = this;
		}
		
		private void detach_FOGOs(FOGO entity)
		{
			this.SendPropertyChanging();
			entity.CONCELHO = null;
		}
	}
	
	[Table(Name="dbo.CORPFOGO")]
	public partial class CORPFOGO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _COD_FOGO;
		
		private int _COD_CORPORACAO;
		
		private decimal _NUM_HOMENS;
		
		private decimal _NUM_VEICULOS;
		
		private EntityRef<FOGO> _FOGO;
		
		private EntityRef<CORPORACAO> _CORPORACAO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOD_FOGOChanging(int value);
    partial void OnCOD_FOGOChanged();
    partial void OnCOD_CORPORACAOChanging(int value);
    partial void OnCOD_CORPORACAOChanged();
    partial void OnNUM_HOMENSChanging(decimal value);
    partial void OnNUM_HOMENSChanged();
    partial void OnNUM_VEICULOSChanging(decimal value);
    partial void OnNUM_VEICULOSChanged();
    #endregion
		
		public CORPFOGO()
		{
			this._FOGO = default(EntityRef<FOGO>);
			this._CORPORACAO = default(EntityRef<CORPORACAO>);
			OnCreated();
		}
		
		[Column(Storage="_COD_FOGO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int COD_FOGO
		{
			get
			{
				return this._COD_FOGO;
			}
			set
			{
				if ((this._COD_FOGO != value))
				{
					if (this._FOGO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCOD_FOGOChanging(value);
					this.SendPropertyChanging();
					this._COD_FOGO = value;
					this.SendPropertyChanged("COD_FOGO");
					this.OnCOD_FOGOChanged();
				}
			}
		}
		
		[Column(Storage="_COD_CORPORACAO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int COD_CORPORACAO
		{
			get
			{
				return this._COD_CORPORACAO;
			}
			set
			{
				if ((this._COD_CORPORACAO != value))
				{
					if (this._CORPORACAO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCOD_CORPORACAOChanging(value);
					this.SendPropertyChanging();
					this._COD_CORPORACAO = value;
					this.SendPropertyChanged("COD_CORPORACAO");
					this.OnCOD_CORPORACAOChanged();
				}
			}
		}
		
		[Column(Storage="_NUM_HOMENS", DbType="Decimal(8,0) NOT NULL")]
		public decimal NUM_HOMENS
		{
			get
			{
				return this._NUM_HOMENS;
			}
			set
			{
				if ((this._NUM_HOMENS != value))
				{
					this.OnNUM_HOMENSChanging(value);
					this.SendPropertyChanging();
					this._NUM_HOMENS = value;
					this.SendPropertyChanged("NUM_HOMENS");
					this.OnNUM_HOMENSChanged();
				}
			}
		}
		
		[Column(Storage="_NUM_VEICULOS", DbType="Decimal(8,0) NOT NULL")]
		public decimal NUM_VEICULOS
		{
			get
			{
				return this._NUM_VEICULOS;
			}
			set
			{
				if ((this._NUM_VEICULOS != value))
				{
					this.OnNUM_VEICULOSChanging(value);
					this.SendPropertyChanging();
					this._NUM_VEICULOS = value;
					this.SendPropertyChanged("NUM_VEICULOS");
					this.OnNUM_VEICULOSChanged();
				}
			}
		}
		
		[Association(Name="FOGO_CORPFOGO", Storage="_FOGO", ThisKey="COD_FOGO", IsForeignKey=true)]
		public FOGO FOGO
		{
			get
			{
				return this._FOGO.Entity;
			}
			set
			{
				FOGO previousValue = this._FOGO.Entity;
				if (((previousValue != value) 
							|| (this._FOGO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FOGO.Entity = null;
						previousValue.CORPFOGOs.Remove(this);
					}
					this._FOGO.Entity = value;
					if ((value != null))
					{
						value.CORPFOGOs.Add(this);
						this._COD_FOGO = value.COD_FOGO;
					}
					else
					{
						this._COD_FOGO = default(int);
					}
					this.SendPropertyChanged("FOGO");
				}
			}
		}
		
		[Association(Name="CORPORACAO_CORPFOGO", Storage="_CORPORACAO", ThisKey="COD_CORPORACAO", IsForeignKey=true)]
		public CORPORACAO CORPORACAO
		{
			get
			{
				return this._CORPORACAO.Entity;
			}
			set
			{
				CORPORACAO previousValue = this._CORPORACAO.Entity;
				if (((previousValue != value) 
							|| (this._CORPORACAO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CORPORACAO.Entity = null;
						previousValue.CORPFOGOs.Remove(this);
					}
					this._CORPORACAO.Entity = value;
					if ((value != null))
					{
						value.CORPFOGOs.Add(this);
						this._COD_CORPORACAO = value.COD_CORPORACAO;
					}
					else
					{
						this._COD_CORPORACAO = default(int);
					}
					this.SendPropertyChanged("CORPORACAO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DEPOSITOS")]
	public partial class DEPOSITO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _COD_DEPO;
		
		private int _COD_TIPO;
		
		private double _LATITUDE;
		
		private double _LONGITUDE;
		
		private double _VOLUME;
		
		private EntityRef<TIPOS_DEPO> _TIPOS_DEPO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOD_DEPOChanging(int value);
    partial void OnCOD_DEPOChanged();
    partial void OnCOD_TIPOChanging(int value);
    partial void OnCOD_TIPOChanged();
    partial void OnLATITUDEChanging(double value);
    partial void OnLATITUDEChanged();
    partial void OnLONGITUDEChanging(double value);
    partial void OnLONGITUDEChanged();
    partial void OnVOLUMEChanging(double value);
    partial void OnVOLUMEChanged();
    #endregion
		
		public DEPOSITO()
		{
			this._TIPOS_DEPO = default(EntityRef<TIPOS_DEPO>);
			OnCreated();
		}
		
		[Column(Storage="_COD_DEPO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int COD_DEPO
		{
			get
			{
				return this._COD_DEPO;
			}
			set
			{
				if ((this._COD_DEPO != value))
				{
					this.OnCOD_DEPOChanging(value);
					this.SendPropertyChanging();
					this._COD_DEPO = value;
					this.SendPropertyChanged("COD_DEPO");
					this.OnCOD_DEPOChanged();
				}
			}
		}
		
		[Column(Storage="_COD_TIPO", DbType="Int NOT NULL")]
		public int COD_TIPO
		{
			get
			{
				return this._COD_TIPO;
			}
			set
			{
				if ((this._COD_TIPO != value))
				{
					if (this._TIPOS_DEPO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCOD_TIPOChanging(value);
					this.SendPropertyChanging();
					this._COD_TIPO = value;
					this.SendPropertyChanged("COD_TIPO");
					this.OnCOD_TIPOChanged();
				}
			}
		}
		
		[Column(Storage="_LATITUDE", DbType="Float NOT NULL")]
		public double LATITUDE
		{
			get
			{
				return this._LATITUDE;
			}
			set
			{
				if ((this._LATITUDE != value))
				{
					this.OnLATITUDEChanging(value);
					this.SendPropertyChanging();
					this._LATITUDE = value;
					this.SendPropertyChanged("LATITUDE");
					this.OnLATITUDEChanged();
				}
			}
		}
		
		[Column(Storage="_LONGITUDE", DbType="Float NOT NULL")]
		public double LONGITUDE
		{
			get
			{
				return this._LONGITUDE;
			}
			set
			{
				if ((this._LONGITUDE != value))
				{
					this.OnLONGITUDEChanging(value);
					this.SendPropertyChanging();
					this._LONGITUDE = value;
					this.SendPropertyChanged("LONGITUDE");
					this.OnLONGITUDEChanged();
				}
			}
		}
		
		[Column(Storage="_VOLUME", DbType="Float NOT NULL")]
		public double VOLUME
		{
			get
			{
				return this._VOLUME;
			}
			set
			{
				if ((this._VOLUME != value))
				{
					this.OnVOLUMEChanging(value);
					this.SendPropertyChanging();
					this._VOLUME = value;
					this.SendPropertyChanged("VOLUME");
					this.OnVOLUMEChanged();
				}
			}
		}
		
		[Association(Name="TIPOS_DEPO_DEPOSITO", Storage="_TIPOS_DEPO", ThisKey="COD_TIPO", IsForeignKey=true)]
		public TIPOS_DEPO TIPOS_DEPO
		{
			get
			{
				return this._TIPOS_DEPO.Entity;
			}
			set
			{
				TIPOS_DEPO previousValue = this._TIPOS_DEPO.Entity;
				if (((previousValue != value) 
							|| (this._TIPOS_DEPO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPOS_DEPO.Entity = null;
						previousValue.DEPOSITOs.Remove(this);
					}
					this._TIPOS_DEPO.Entity = value;
					if ((value != null))
					{
						value.DEPOSITOs.Add(this);
						this._COD_TIPO = value.COD_TIPO;
					}
					else
					{
						this._COD_TIPO = default(int);
					}
					this.SendPropertyChanged("TIPOS_DEPO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DISTRITO")]
	public partial class DISTRITO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _COD_DISTRITO;
		
		private string _DISTRITO_DESIGN;
		
		private EntitySet<VOLUNTARIADO> _VOLUNTARIADOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOD_DISTRITOChanging(int value);
    partial void OnCOD_DISTRITOChanged();
    partial void OnDISTRITO_DESIGNChanging(string value);
    partial void OnDISTRITO_DESIGNChanged();
    #endregion
		
		public DISTRITO()
		{
			this._VOLUNTARIADOs = new EntitySet<VOLUNTARIADO>(new Action<VOLUNTARIADO>(this.attach_VOLUNTARIADOs), new Action<VOLUNTARIADO>(this.detach_VOLUNTARIADOs));
			OnCreated();
		}
		
		[Column(Storage="_COD_DISTRITO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int COD_DISTRITO
		{
			get
			{
				return this._COD_DISTRITO;
			}
			set
			{
				if ((this._COD_DISTRITO != value))
				{
					this.OnCOD_DISTRITOChanging(value);
					this.SendPropertyChanging();
					this._COD_DISTRITO = value;
					this.SendPropertyChanged("COD_DISTRITO");
					this.OnCOD_DISTRITOChanged();
				}
			}
		}
		
		[Column(Storage="_DISTRITO_DESIGN", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DISTRITO_DESIGN
		{
			get
			{
				return this._DISTRITO_DESIGN;
			}
			set
			{
				if ((this._DISTRITO_DESIGN != value))
				{
					this.OnDISTRITO_DESIGNChanging(value);
					this.SendPropertyChanging();
					this._DISTRITO_DESIGN = value;
					this.SendPropertyChanged("DISTRITO_DESIGN");
					this.OnDISTRITO_DESIGNChanged();
				}
			}
		}
		
		[Association(Name="DISTRITO_VOLUNTARIADO", Storage="_VOLUNTARIADOs", OtherKey="COD_DISTRITO")]
		public EntitySet<VOLUNTARIADO> VOLUNTARIADOs
		{
			get
			{
				return this._VOLUNTARIADOs;
			}
			set
			{
				this._VOLUNTARIADOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VOLUNTARIADOs(VOLUNTARIADO entity)
		{
			this.SendPropertyChanging();
			entity.DISTRITO = this;
		}
		
		private void detach_VOLUNTARIADOs(VOLUNTARIADO entity)
		{
			this.SendPropertyChanging();
			entity.DISTRITO = null;
		}
	}
	
	[Table(Name="dbo.ESTADO_FOGO")]
	public partial class ESTADO_FOGO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _COD_ESTADO;
		
		private string _ESTADO_DESIGN;
		
		private EntitySet<FOGO> _FOGOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOD_ESTADOChanging(int value);
    partial void OnCOD_ESTADOChanged();
    partial void OnESTADO_DESIGNChanging(string value);
    partial void OnESTADO_DESIGNChanged();
    #endregion
		
		public ESTADO_FOGO()
		{
			this._FOGOs = new EntitySet<FOGO>(new Action<FOGO>(this.attach_FOGOs), new Action<FOGO>(this.detach_FOGOs));
			OnCreated();
		}
		
		[Column(Storage="_COD_ESTADO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int COD_ESTADO
		{
			get
			{
				return this._COD_ESTADO;
			}
			set
			{
				if ((this._COD_ESTADO != value))
				{
					this.OnCOD_ESTADOChanging(value);
					this.SendPropertyChanging();
					this._COD_ESTADO = value;
					this.SendPropertyChanged("COD_ESTADO");
					this.OnCOD_ESTADOChanged();
				}
			}
		}
		
		[Column(Storage="_ESTADO_DESIGN", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ESTADO_DESIGN
		{
			get
			{
				return this._ESTADO_DESIGN;
			}
			set
			{
				if ((this._ESTADO_DESIGN != value))
				{
					this.OnESTADO_DESIGNChanging(value);
					this.SendPropertyChanging();
					this._ESTADO_DESIGN = value;
					this.SendPropertyChanged("ESTADO_DESIGN");
					this.OnESTADO_DESIGNChanged();
				}
			}
		}
		
		[Association(Name="ESTADO_FOGO_FOGO", Storage="_FOGOs", OtherKey="COD_ESTADO")]
		public EntitySet<FOGO> FOGOs
		{
			get
			{
				return this._FOGOs;
			}
			set
			{
				this._FOGOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FOGOs(FOGO entity)
		{
			this.SendPropertyChanging();
			entity.ESTADO_FOGO = this;
		}
		
		private void detach_FOGOs(FOGO entity)
		{
			this.SendPropertyChanging();
			entity.ESTADO_FOGO = null;
		}
	}
	
	[Table(Name="dbo.FOGO")]
	public partial class FOGO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _COD_FOGO;
		
		private int _COD_COMANDANTE;
		
		private int _COD_CONCELHO;
		
		private System.Nullable<int> _COD_RELATORIO;
		
		private int _COD_ESTADO;
		
		private double _LATITUDE_FOGO;
		
		private double _LONGITUDE_FOGO;
		
		private double _RAIO_FOGO;
		
		private double _RAIO_SEGURANCA;
		
		private System.DateTime _DH_START;
		
		private System.DateTime _DH_CIRCUNSCRITO;
		
		private System.DateTime _DH_FIM;
		
		private decimal _BAIXAS_BOMBEIROS;
		
		private decimal _BAIXAS_CIVIS;
		
		private EntitySet<CORPFOGO> _CORPFOGOs;
		
		private EntitySet<HELIFOGO> _HELIFOGOs;
		
		private EntitySet<RELATORIO> _RELATORIOs;
		
		private EntityRef<COMANDANTE> _COMANDANTE;
		
		private EntityRef<CONCELHO> _CONCELHO;
		
		private EntityRef<ESTADO_FOGO> _ESTADO_FOGO;
		
		private EntityRef<RELATORIO> _RELATORIO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOD_FOGOChanging(int value);
    partial void OnCOD_FOGOChanged();
    partial void OnCOD_COMANDANTEChanging(int value);
    partial void OnCOD_COMANDANTEChanged();
    partial void OnCOD_CONCELHOChanging(int value);
    partial void OnCOD_CONCELHOChanged();
    partial void OnCOD_RELATORIOChanging(System.Nullable<int> value);
    partial void OnCOD_RELATORIOChanged();
    partial void OnCOD_ESTADOChanging(int value);
    partial void OnCOD_ESTADOChanged();
    partial void OnLATITUDE_FOGOChanging(double value);
    partial void OnLATITUDE_FOGOChanged();
    partial void OnLONGITUDE_FOGOChanging(double value);
    partial void OnLONGITUDE_FOGOChanged();
    partial void OnRAIO_FOGOChanging(double value);
    partial void OnRAIO_FOGOChanged();
    partial void OnRAIO_SEGURANCAChanging(double value);
    partial void OnRAIO_SEGURANCAChanged();
    partial void OnDH_STARTChanging(System.DateTime value);
    partial void OnDH_STARTChanged();
    partial void OnDH_CIRCUNSCRITOChanging(System.DateTime value);
    partial void OnDH_CIRCUNSCRITOChanged();
    partial void OnDH_FIMChanging(System.DateTime value);
    partial void OnDH_FIMChanged();
    partial void OnBAIXAS_BOMBEIROSChanging(decimal value);
    partial void OnBAIXAS_BOMBEIROSChanged();
    partial void OnBAIXAS_CIVISChanging(decimal value);
    partial void OnBAIXAS_CIVISChanged();
    #endregion
		
		public FOGO()
		{
			this._CORPFOGOs = new EntitySet<CORPFOGO>(new Action<CORPFOGO>(this.attach_CORPFOGOs), new Action<CORPFOGO>(this.detach_CORPFOGOs));
			this._HELIFOGOs = new EntitySet<HELIFOGO>(new Action<HELIFOGO>(this.attach_HELIFOGOs), new Action<HELIFOGO>(this.detach_HELIFOGOs));
			this._RELATORIOs = new EntitySet<RELATORIO>(new Action<RELATORIO>(this.attach_RELATORIOs), new Action<RELATORIO>(this.detach_RELATORIOs));
			this._COMANDANTE = default(EntityRef<COMANDANTE>);
			this._CONCELHO = default(EntityRef<CONCELHO>);
			this._ESTADO_FOGO = default(EntityRef<ESTADO_FOGO>);
			this._RELATORIO = default(EntityRef<RELATORIO>);
			OnCreated();
		}
		
		[Column(Storage="_COD_FOGO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int COD_FOGO
		{
			get
			{
				return this._COD_FOGO;
			}
			set
			{
				if ((this._COD_FOGO != value))
				{
					this.OnCOD_FOGOChanging(value);
					this.SendPropertyChanging();
					this._COD_FOGO = value;
					this.SendPropertyChanged("COD_FOGO");
					this.OnCOD_FOGOChanged();
				}
			}
		}
		
		[Column(Storage="_COD_COMANDANTE", DbType="Int NOT NULL")]
		public int COD_COMANDANTE
		{
			get
			{
				return this._COD_COMANDANTE;
			}
			set
			{
				if ((this._COD_COMANDANTE != value))
				{
					if (this._COMANDANTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCOD_COMANDANTEChanging(value);
					this.SendPropertyChanging();
					this._COD_COMANDANTE = value;
					this.SendPropertyChanged("COD_COMANDANTE");
					this.OnCOD_COMANDANTEChanged();
				}
			}
		}
		
		[Column(Storage="_COD_CONCELHO", DbType="Int NOT NULL")]
		public int COD_CONCELHO
		{
			get
			{
				return this._COD_CONCELHO;
			}
			set
			{
				if ((this._COD_CONCELHO != value))
				{
					if (this._CONCELHO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCOD_CONCELHOChanging(value);
					this.SendPropertyChanging();
					this._COD_CONCELHO = value;
					this.SendPropertyChanged("COD_CONCELHO");
					this.OnCOD_CONCELHOChanged();
				}
			}
		}
		
		[Column(Storage="_COD_RELATORIO", DbType="Int")]
		public System.Nullable<int> COD_RELATORIO
		{
			get
			{
				return this._COD_RELATORIO;
			}
			set
			{
				if ((this._COD_RELATORIO != value))
				{
					if (this._RELATORIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCOD_RELATORIOChanging(value);
					this.SendPropertyChanging();
					this._COD_RELATORIO = value;
					this.SendPropertyChanged("COD_RELATORIO");
					this.OnCOD_RELATORIOChanged();
				}
			}
		}
		
		[Column(Storage="_COD_ESTADO", DbType="Int NOT NULL")]
		public int COD_ESTADO
		{
			get
			{
				return this._COD_ESTADO;
			}
			set
			{
				if ((this._COD_ESTADO != value))
				{
					if (this._ESTADO_FOGO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCOD_ESTADOChanging(value);
					this.SendPropertyChanging();
					this._COD_ESTADO = value;
					this.SendPropertyChanged("COD_ESTADO");
					this.OnCOD_ESTADOChanged();
				}
			}
		}
		
		[Column(Storage="_LATITUDE_FOGO", DbType="Float NOT NULL")]
		public double LATITUDE_FOGO
		{
			get
			{
				return this._LATITUDE_FOGO;
			}
			set
			{
				if ((this._LATITUDE_FOGO != value))
				{
					this.OnLATITUDE_FOGOChanging(value);
					this.SendPropertyChanging();
					this._LATITUDE_FOGO = value;
					this.SendPropertyChanged("LATITUDE_FOGO");
					this.OnLATITUDE_FOGOChanged();
				}
			}
		}
		
		[Column(Storage="_LONGITUDE_FOGO", DbType="Float NOT NULL")]
		public double LONGITUDE_FOGO
		{
			get
			{
				return this._LONGITUDE_FOGO;
			}
			set
			{
				if ((this._LONGITUDE_FOGO != value))
				{
					this.OnLONGITUDE_FOGOChanging(value);
					this.SendPropertyChanging();
					this._LONGITUDE_FOGO = value;
					this.SendPropertyChanged("LONGITUDE_FOGO");
					this.OnLONGITUDE_FOGOChanged();
				}
			}
		}
		
		[Column(Storage="_RAIO_FOGO", DbType="Float NOT NULL")]
		public double RAIO_FOGO
		{
			get
			{
				return this._RAIO_FOGO;
			}
			set
			{
				if ((this._RAIO_FOGO != value))
				{
					this.OnRAIO_FOGOChanging(value);
					this.SendPropertyChanging();
					this._RAIO_FOGO = value;
					this.SendPropertyChanged("RAIO_FOGO");
					this.OnRAIO_FOGOChanged();
				}
			}
		}
		
		[Column(Storage="_RAIO_SEGURANCA", DbType="Float NOT NULL")]
		public double RAIO_SEGURANCA
		{
			get
			{
				return this._RAIO_SEGURANCA;
			}
			set
			{
				if ((this._RAIO_SEGURANCA != value))
				{
					this.OnRAIO_SEGURANCAChanging(value);
					this.SendPropertyChanging();
					this._RAIO_SEGURANCA = value;
					this.SendPropertyChanged("RAIO_SEGURANCA");
					this.OnRAIO_SEGURANCAChanged();
				}
			}
		}
		
		[Column(Storage="_DH_START", DbType="DateTime NOT NULL")]
		public System.DateTime DH_START
		{
			get
			{
				return this._DH_START;
			}
			set
			{
				if ((this._DH_START != value))
				{
					this.OnDH_STARTChanging(value);
					this.SendPropertyChanging();
					this._DH_START = value;
					this.SendPropertyChanged("DH_START");
					this.OnDH_STARTChanged();
				}
			}
		}
		
		[Column(Storage="_DH_CIRCUNSCRITO", DbType="DateTime NOT NULL")]
		public System.DateTime DH_CIRCUNSCRITO
		{
			get
			{
				return this._DH_CIRCUNSCRITO;
			}
			set
			{
				if ((this._DH_CIRCUNSCRITO != value))
				{
					this.OnDH_CIRCUNSCRITOChanging(value);
					this.SendPropertyChanging();
					this._DH_CIRCUNSCRITO = value;
					this.SendPropertyChanged("DH_CIRCUNSCRITO");
					this.OnDH_CIRCUNSCRITOChanged();
				}
			}
		}
		
		[Column(Storage="_DH_FIM", DbType="DateTime NOT NULL")]
		public System.DateTime DH_FIM
		{
			get
			{
				return this._DH_FIM;
			}
			set
			{
				if ((this._DH_FIM != value))
				{
					this.OnDH_FIMChanging(value);
					this.SendPropertyChanging();
					this._DH_FIM = value;
					this.SendPropertyChanged("DH_FIM");
					this.OnDH_FIMChanged();
				}
			}
		}
		
		[Column(Storage="_BAIXAS_BOMBEIROS", DbType="Decimal(8,0) NOT NULL")]
		public decimal BAIXAS_BOMBEIROS
		{
			get
			{
				return this._BAIXAS_BOMBEIROS;
			}
			set
			{
				if ((this._BAIXAS_BOMBEIROS != value))
				{
					this.OnBAIXAS_BOMBEIROSChanging(value);
					this.SendPropertyChanging();
					this._BAIXAS_BOMBEIROS = value;
					this.SendPropertyChanged("BAIXAS_BOMBEIROS");
					this.OnBAIXAS_BOMBEIROSChanged();
				}
			}
		}
		
		[Column(Storage="_BAIXAS_CIVIS", DbType="Decimal(8,0) NOT NULL")]
		public decimal BAIXAS_CIVIS
		{
			get
			{
				return this._BAIXAS_CIVIS;
			}
			set
			{
				if ((this._BAIXAS_CIVIS != value))
				{
					this.OnBAIXAS_CIVISChanging(value);
					this.SendPropertyChanging();
					this._BAIXAS_CIVIS = value;
					this.SendPropertyChanged("BAIXAS_CIVIS");
					this.OnBAIXAS_CIVISChanged();
				}
			}
		}
		
		[Association(Name="FOGO_CORPFOGO", Storage="_CORPFOGOs", OtherKey="COD_FOGO")]
		public EntitySet<CORPFOGO> CORPFOGOs
		{
			get
			{
				return this._CORPFOGOs;
			}
			set
			{
				this._CORPFOGOs.Assign(value);
			}
		}
		
		[Association(Name="FOGO_HELIFOGO", Storage="_HELIFOGOs", OtherKey="COD_FOGO")]
		public EntitySet<HELIFOGO> HELIFOGOs
		{
			get
			{
				return this._HELIFOGOs;
			}
			set
			{
				this._HELIFOGOs.Assign(value);
			}
		}
		
		[Association(Name="FOGO_RELATORIO", Storage="_RELATORIOs", OtherKey="COD_FOGO")]
		public EntitySet<RELATORIO> RELATORIOs
		{
			get
			{
				return this._RELATORIOs;
			}
			set
			{
				this._RELATORIOs.Assign(value);
			}
		}
		
		[Association(Name="COMANDANTE_FOGO", Storage="_COMANDANTE", ThisKey="COD_COMANDANTE", IsForeignKey=true)]
		public COMANDANTE COMANDANTE
		{
			get
			{
				return this._COMANDANTE.Entity;
			}
			set
			{
				COMANDANTE previousValue = this._COMANDANTE.Entity;
				if (((previousValue != value) 
							|| (this._COMANDANTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COMANDANTE.Entity = null;
						previousValue.FOGOs.Remove(this);
					}
					this._COMANDANTE.Entity = value;
					if ((value != null))
					{
						value.FOGOs.Add(this);
						this._COD_COMANDANTE = value.COD_COMANDANTE;
					}
					else
					{
						this._COD_COMANDANTE = default(int);
					}
					this.SendPropertyChanged("COMANDANTE");
				}
			}
		}
		
		[Association(Name="CONCELHO_FOGO", Storage="_CONCELHO", ThisKey="COD_CONCELHO", IsForeignKey=true)]
		public CONCELHO CONCELHO
		{
			get
			{
				return this._CONCELHO.Entity;
			}
			set
			{
				CONCELHO previousValue = this._CONCELHO.Entity;
				if (((previousValue != value) 
							|| (this._CONCELHO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONCELHO.Entity = null;
						previousValue.FOGOs.Remove(this);
					}
					this._CONCELHO.Entity = value;
					if ((value != null))
					{
						value.FOGOs.Add(this);
						this._COD_CONCELHO = value.COD_CONCELHO;
					}
					else
					{
						this._COD_CONCELHO = default(int);
					}
					this.SendPropertyChanged("CONCELHO");
				}
			}
		}
		
		[Association(Name="ESTADO_FOGO_FOGO", Storage="_ESTADO_FOGO", ThisKey="COD_ESTADO", IsForeignKey=true)]
		public ESTADO_FOGO ESTADO_FOGO
		{
			get
			{
				return this._ESTADO_FOGO.Entity;
			}
			set
			{
				ESTADO_FOGO previousValue = this._ESTADO_FOGO.Entity;
				if (((previousValue != value) 
							|| (this._ESTADO_FOGO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESTADO_FOGO.Entity = null;
						previousValue.FOGOs.Remove(this);
					}
					this._ESTADO_FOGO.Entity = value;
					if ((value != null))
					{
						value.FOGOs.Add(this);
						this._COD_ESTADO = value.COD_ESTADO;
					}
					else
					{
						this._COD_ESTADO = default(int);
					}
					this.SendPropertyChanged("ESTADO_FOGO");
				}
			}
		}
		
		[Association(Name="RELATORIO_FOGO", Storage="_RELATORIO", ThisKey="COD_RELATORIO", IsForeignKey=true)]
		public RELATORIO RELATORIO
		{
			get
			{
				return this._RELATORIO.Entity;
			}
			set
			{
				RELATORIO previousValue = this._RELATORIO.Entity;
				if (((previousValue != value) 
							|| (this._RELATORIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RELATORIO.Entity = null;
						previousValue.FOGOs.Remove(this);
					}
					this._RELATORIO.Entity = value;
					if ((value != null))
					{
						value.FOGOs.Add(this);
						this._COD_RELATORIO = value.COD_RELATORIO;
					}
					else
					{
						this._COD_RELATORIO = default(Nullable<int>);
					}
					this.SendPropertyChanged("RELATORIO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CORPFOGOs(CORPFOGO entity)
		{
			this.SendPropertyChanging();
			entity.FOGO = this;
		}
		
		private void detach_CORPFOGOs(CORPFOGO entity)
		{
			this.SendPropertyChanging();
			entity.FOGO = null;
		}
		
		private void attach_HELIFOGOs(HELIFOGO entity)
		{
			this.SendPropertyChanging();
			entity.FOGO = this;
		}
		
		private void detach_HELIFOGOs(HELIFOGO entity)
		{
			this.SendPropertyChanging();
			entity.FOGO = null;
		}
		
		private void attach_RELATORIOs(RELATORIO entity)
		{
			this.SendPropertyChanging();
			entity.FOGO = this;
		}
		
		private void detach_RELATORIOs(RELATORIO entity)
		{
			this.SendPropertyChanging();
			entity.FOGO = null;
		}
	}
	
	[Table(Name="dbo.HELI")]
	public partial class HELI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _COD_HELI;
		
		private string _HELI_DESIGN;
		
		private bool _HELI_DISPONIBILIDADE;
		
		private EntitySet<HELIFOGO> _HELIFOGOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOD_HELIChanging(int value);
    partial void OnCOD_HELIChanged();
    partial void OnHELI_DESIGNChanging(string value);
    partial void OnHELI_DESIGNChanged();
    partial void OnHELI_DISPONIBILIDADEChanging(bool value);
    partial void OnHELI_DISPONIBILIDADEChanged();
    #endregion
		
		public HELI()
		{
			this._HELIFOGOs = new EntitySet<HELIFOGO>(new Action<HELIFOGO>(this.attach_HELIFOGOs), new Action<HELIFOGO>(this.detach_HELIFOGOs));
			OnCreated();
		}
		
		[Column(Storage="_COD_HELI", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int COD_HELI
		{
			get
			{
				return this._COD_HELI;
			}
			set
			{
				if ((this._COD_HELI != value))
				{
					this.OnCOD_HELIChanging(value);
					this.SendPropertyChanging();
					this._COD_HELI = value;
					this.SendPropertyChanged("COD_HELI");
					this.OnCOD_HELIChanged();
				}
			}
		}
		
		[Column(Storage="_HELI_DESIGN", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string HELI_DESIGN
		{
			get
			{
				return this._HELI_DESIGN;
			}
			set
			{
				if ((this._HELI_DESIGN != value))
				{
					this.OnHELI_DESIGNChanging(value);
					this.SendPropertyChanging();
					this._HELI_DESIGN = value;
					this.SendPropertyChanged("HELI_DESIGN");
					this.OnHELI_DESIGNChanged();
				}
			}
		}
		
		[Column(Storage="_HELI_DISPONIBILIDADE", DbType="Bit NOT NULL")]
		public bool HELI_DISPONIBILIDADE
		{
			get
			{
				return this._HELI_DISPONIBILIDADE;
			}
			set
			{
				if ((this._HELI_DISPONIBILIDADE != value))
				{
					this.OnHELI_DISPONIBILIDADEChanging(value);
					this.SendPropertyChanging();
					this._HELI_DISPONIBILIDADE = value;
					this.SendPropertyChanged("HELI_DISPONIBILIDADE");
					this.OnHELI_DISPONIBILIDADEChanged();
				}
			}
		}
		
		[Association(Name="HELI_HELIFOGO", Storage="_HELIFOGOs", OtherKey="COD_HELI")]
		public EntitySet<HELIFOGO> HELIFOGOs
		{
			get
			{
				return this._HELIFOGOs;
			}
			set
			{
				this._HELIFOGOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HELIFOGOs(HELIFOGO entity)
		{
			this.SendPropertyChanging();
			entity.HELI = this;
		}
		
		private void detach_HELIFOGOs(HELIFOGO entity)
		{
			this.SendPropertyChanging();
			entity.HELI = null;
		}
	}
	
	[Table(Name="dbo.HELIFOGO")]
	public partial class HELIFOGO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _COD_FOGO;
		
		private int _COD_HELI;
		
		private EntityRef<HELI> _HELI;
		
		private EntityRef<FOGO> _FOGO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOD_FOGOChanging(int value);
    partial void OnCOD_FOGOChanged();
    partial void OnCOD_HELIChanging(int value);
    partial void OnCOD_HELIChanged();
    #endregion
		
		public HELIFOGO()
		{
			this._HELI = default(EntityRef<HELI>);
			this._FOGO = default(EntityRef<FOGO>);
			OnCreated();
		}
		
		[Column(Storage="_COD_FOGO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int COD_FOGO
		{
			get
			{
				return this._COD_FOGO;
			}
			set
			{
				if ((this._COD_FOGO != value))
				{
					if (this._FOGO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCOD_FOGOChanging(value);
					this.SendPropertyChanging();
					this._COD_FOGO = value;
					this.SendPropertyChanged("COD_FOGO");
					this.OnCOD_FOGOChanged();
				}
			}
		}
		
		[Column(Storage="_COD_HELI", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int COD_HELI
		{
			get
			{
				return this._COD_HELI;
			}
			set
			{
				if ((this._COD_HELI != value))
				{
					if (this._HELI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCOD_HELIChanging(value);
					this.SendPropertyChanging();
					this._COD_HELI = value;
					this.SendPropertyChanged("COD_HELI");
					this.OnCOD_HELIChanged();
				}
			}
		}
		
		[Association(Name="HELI_HELIFOGO", Storage="_HELI", ThisKey="COD_HELI", IsForeignKey=true)]
		public HELI HELI
		{
			get
			{
				return this._HELI.Entity;
			}
			set
			{
				HELI previousValue = this._HELI.Entity;
				if (((previousValue != value) 
							|| (this._HELI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HELI.Entity = null;
						previousValue.HELIFOGOs.Remove(this);
					}
					this._HELI.Entity = value;
					if ((value != null))
					{
						value.HELIFOGOs.Add(this);
						this._COD_HELI = value.COD_HELI;
					}
					else
					{
						this._COD_HELI = default(int);
					}
					this.SendPropertyChanged("HELI");
				}
			}
		}
		
		[Association(Name="FOGO_HELIFOGO", Storage="_FOGO", ThisKey="COD_FOGO", IsForeignKey=true)]
		public FOGO FOGO
		{
			get
			{
				return this._FOGO.Entity;
			}
			set
			{
				FOGO previousValue = this._FOGO.Entity;
				if (((previousValue != value) 
							|| (this._FOGO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FOGO.Entity = null;
						previousValue.HELIFOGOs.Remove(this);
					}
					this._FOGO.Entity = value;
					if ((value != null))
					{
						value.HELIFOGOs.Add(this);
						this._COD_FOGO = value.COD_FOGO;
					}
					else
					{
						this._COD_FOGO = default(int);
					}
					this.SendPropertyChanged("FOGO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.RELATORIO")]
	public partial class RELATORIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _COD_RELATORIO;
		
		private int _COD_FOGO;
		
		private string _COMENTARIO;
		
		private EntitySet<FOGO> _FOGOs;
		
		private EntityRef<FOGO> _FOGO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOD_RELATORIOChanging(int value);
    partial void OnCOD_RELATORIOChanged();
    partial void OnCOD_FOGOChanging(int value);
    partial void OnCOD_FOGOChanged();
    partial void OnCOMENTARIOChanging(string value);
    partial void OnCOMENTARIOChanged();
    #endregion
		
		public RELATORIO()
		{
			this._FOGOs = new EntitySet<FOGO>(new Action<FOGO>(this.attach_FOGOs), new Action<FOGO>(this.detach_FOGOs));
			this._FOGO = default(EntityRef<FOGO>);
			OnCreated();
		}
		
		[Column(Storage="_COD_RELATORIO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int COD_RELATORIO
		{
			get
			{
				return this._COD_RELATORIO;
			}
			set
			{
				if ((this._COD_RELATORIO != value))
				{
					this.OnCOD_RELATORIOChanging(value);
					this.SendPropertyChanging();
					this._COD_RELATORIO = value;
					this.SendPropertyChanged("COD_RELATORIO");
					this.OnCOD_RELATORIOChanged();
				}
			}
		}
		
		[Column(Storage="_COD_FOGO", DbType="Int NOT NULL")]
		public int COD_FOGO
		{
			get
			{
				return this._COD_FOGO;
			}
			set
			{
				if ((this._COD_FOGO != value))
				{
					if (this._FOGO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCOD_FOGOChanging(value);
					this.SendPropertyChanging();
					this._COD_FOGO = value;
					this.SendPropertyChanged("COD_FOGO");
					this.OnCOD_FOGOChanged();
				}
			}
		}
		
		[Column(Storage="_COMENTARIO", DbType="VarChar(8000) NOT NULL", CanBeNull=false)]
		public string COMENTARIO
		{
			get
			{
				return this._COMENTARIO;
			}
			set
			{
				if ((this._COMENTARIO != value))
				{
					this.OnCOMENTARIOChanging(value);
					this.SendPropertyChanging();
					this._COMENTARIO = value;
					this.SendPropertyChanged("COMENTARIO");
					this.OnCOMENTARIOChanged();
				}
			}
		}
		
		[Association(Name="RELATORIO_FOGO", Storage="_FOGOs", OtherKey="COD_RELATORIO")]
		public EntitySet<FOGO> FOGOs
		{
			get
			{
				return this._FOGOs;
			}
			set
			{
				this._FOGOs.Assign(value);
			}
		}
		
		[Association(Name="FOGO_RELATORIO", Storage="_FOGO", ThisKey="COD_FOGO", IsForeignKey=true)]
		public FOGO FOGO
		{
			get
			{
				return this._FOGO.Entity;
			}
			set
			{
				FOGO previousValue = this._FOGO.Entity;
				if (((previousValue != value) 
							|| (this._FOGO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FOGO.Entity = null;
						previousValue.RELATORIOs.Remove(this);
					}
					this._FOGO.Entity = value;
					if ((value != null))
					{
						value.RELATORIOs.Add(this);
						this._COD_FOGO = value.COD_FOGO;
					}
					else
					{
						this._COD_FOGO = default(int);
					}
					this.SendPropertyChanged("FOGO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FOGOs(FOGO entity)
		{
			this.SendPropertyChanging();
			entity.RELATORIO = this;
		}
		
		private void detach_FOGOs(FOGO entity)
		{
			this.SendPropertyChanging();
			entity.RELATORIO = null;
		}
	}
	
	[Table(Name="dbo.TIPOS_DEPOS")]
	public partial class TIPOS_DEPO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _COD_TIPO;
		
		private string _TIPO_DESIGN;
		
		private EntitySet<DEPOSITO> _DEPOSITOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOD_TIPOChanging(int value);
    partial void OnCOD_TIPOChanged();
    partial void OnTIPO_DESIGNChanging(string value);
    partial void OnTIPO_DESIGNChanged();
    #endregion
		
		public TIPOS_DEPO()
		{
			this._DEPOSITOs = new EntitySet<DEPOSITO>(new Action<DEPOSITO>(this.attach_DEPOSITOs), new Action<DEPOSITO>(this.detach_DEPOSITOs));
			OnCreated();
		}
		
		[Column(Storage="_COD_TIPO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int COD_TIPO
		{
			get
			{
				return this._COD_TIPO;
			}
			set
			{
				if ((this._COD_TIPO != value))
				{
					this.OnCOD_TIPOChanging(value);
					this.SendPropertyChanging();
					this._COD_TIPO = value;
					this.SendPropertyChanged("COD_TIPO");
					this.OnCOD_TIPOChanged();
				}
			}
		}
		
		[Column(Storage="_TIPO_DESIGN", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TIPO_DESIGN
		{
			get
			{
				return this._TIPO_DESIGN;
			}
			set
			{
				if ((this._TIPO_DESIGN != value))
				{
					this.OnTIPO_DESIGNChanging(value);
					this.SendPropertyChanging();
					this._TIPO_DESIGN = value;
					this.SendPropertyChanged("TIPO_DESIGN");
					this.OnTIPO_DESIGNChanged();
				}
			}
		}
		
		[Association(Name="TIPOS_DEPO_DEPOSITO", Storage="_DEPOSITOs", OtherKey="COD_TIPO")]
		public EntitySet<DEPOSITO> DEPOSITOs
		{
			get
			{
				return this._DEPOSITOs;
			}
			set
			{
				this._DEPOSITOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DEPOSITOs(DEPOSITO entity)
		{
			this.SendPropertyChanging();
			entity.TIPOS_DEPO = this;
		}
		
		private void detach_DEPOSITOs(DEPOSITO entity)
		{
			this.SendPropertyChanging();
			entity.TIPOS_DEPO = null;
		}
	}
	
	[Table(Name="dbo.CORPORACAO")]
	public partial class CORPORACAO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _COD_CORPORACAO;
		
		private string _CORPORACAO_DESIGN;
		
		private bool _DISPONIBILIDADE_CORP;
		
		private double _LATITUDE_CORP;
		
		private double _LONGITUDE_CORP;
		
		private decimal _NUM_HOMENS_DISP;
		
		private decimal _NUM_VEICULOS_DISP;
		
		private EntitySet<CORPFOGO> _CORPFOGOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOD_CORPORACAOChanging(int value);
    partial void OnCOD_CORPORACAOChanged();
    partial void OnCORPORACAO_DESIGNChanging(string value);
    partial void OnCORPORACAO_DESIGNChanged();
    partial void OnDISPONIBILIDADE_CORPChanging(bool value);
    partial void OnDISPONIBILIDADE_CORPChanged();
    partial void OnLATITUDE_CORPChanging(double value);
    partial void OnLATITUDE_CORPChanged();
    partial void OnLONGITUDE_CORPChanging(double value);
    partial void OnLONGITUDE_CORPChanged();
    partial void OnNUM_HOMENS_DISPChanging(decimal value);
    partial void OnNUM_HOMENS_DISPChanged();
    partial void OnNUM_VEICULOS_DISPChanging(decimal value);
    partial void OnNUM_VEICULOS_DISPChanged();
    #endregion
		
		public CORPORACAO()
		{
			this._CORPFOGOs = new EntitySet<CORPFOGO>(new Action<CORPFOGO>(this.attach_CORPFOGOs), new Action<CORPFOGO>(this.detach_CORPFOGOs));
			OnCreated();
		}
		
		[Column(Storage="_COD_CORPORACAO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int COD_CORPORACAO
		{
			get
			{
				return this._COD_CORPORACAO;
			}
			set
			{
				if ((this._COD_CORPORACAO != value))
				{
					this.OnCOD_CORPORACAOChanging(value);
					this.SendPropertyChanging();
					this._COD_CORPORACAO = value;
					this.SendPropertyChanged("COD_CORPORACAO");
					this.OnCOD_CORPORACAOChanged();
				}
			}
		}
		
		[Column(Storage="_CORPORACAO_DESIGN", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CORPORACAO_DESIGN
		{
			get
			{
				return this._CORPORACAO_DESIGN;
			}
			set
			{
				if ((this._CORPORACAO_DESIGN != value))
				{
					this.OnCORPORACAO_DESIGNChanging(value);
					this.SendPropertyChanging();
					this._CORPORACAO_DESIGN = value;
					this.SendPropertyChanged("CORPORACAO_DESIGN");
					this.OnCORPORACAO_DESIGNChanged();
				}
			}
		}
		
		[Column(Storage="_DISPONIBILIDADE_CORP", DbType="Bit NOT NULL")]
		public bool DISPONIBILIDADE_CORP
		{
			get
			{
				return this._DISPONIBILIDADE_CORP;
			}
			set
			{
				if ((this._DISPONIBILIDADE_CORP != value))
				{
					this.OnDISPONIBILIDADE_CORPChanging(value);
					this.SendPropertyChanging();
					this._DISPONIBILIDADE_CORP = value;
					this.SendPropertyChanged("DISPONIBILIDADE_CORP");
					this.OnDISPONIBILIDADE_CORPChanged();
				}
			}
		}
		
		[Column(Storage="_LATITUDE_CORP", DbType="Float NOT NULL")]
		public double LATITUDE_CORP
		{
			get
			{
				return this._LATITUDE_CORP;
			}
			set
			{
				if ((this._LATITUDE_CORP != value))
				{
					this.OnLATITUDE_CORPChanging(value);
					this.SendPropertyChanging();
					this._LATITUDE_CORP = value;
					this.SendPropertyChanged("LATITUDE_CORP");
					this.OnLATITUDE_CORPChanged();
				}
			}
		}
		
		[Column(Storage="_LONGITUDE_CORP", DbType="Float NOT NULL")]
		public double LONGITUDE_CORP
		{
			get
			{
				return this._LONGITUDE_CORP;
			}
			set
			{
				if ((this._LONGITUDE_CORP != value))
				{
					this.OnLONGITUDE_CORPChanging(value);
					this.SendPropertyChanging();
					this._LONGITUDE_CORP = value;
					this.SendPropertyChanged("LONGITUDE_CORP");
					this.OnLONGITUDE_CORPChanged();
				}
			}
		}
		
		[Column(Storage="_NUM_HOMENS_DISP", DbType="Decimal(8,0) NOT NULL")]
		public decimal NUM_HOMENS_DISP
		{
			get
			{
				return this._NUM_HOMENS_DISP;
			}
			set
			{
				if ((this._NUM_HOMENS_DISP != value))
				{
					this.OnNUM_HOMENS_DISPChanging(value);
					this.SendPropertyChanging();
					this._NUM_HOMENS_DISP = value;
					this.SendPropertyChanged("NUM_HOMENS_DISP");
					this.OnNUM_HOMENS_DISPChanged();
				}
			}
		}
		
		[Column(Storage="_NUM_VEICULOS_DISP", DbType="Decimal(8,0) NOT NULL")]
		public decimal NUM_VEICULOS_DISP
		{
			get
			{
				return this._NUM_VEICULOS_DISP;
			}
			set
			{
				if ((this._NUM_VEICULOS_DISP != value))
				{
					this.OnNUM_VEICULOS_DISPChanging(value);
					this.SendPropertyChanging();
					this._NUM_VEICULOS_DISP = value;
					this.SendPropertyChanged("NUM_VEICULOS_DISP");
					this.OnNUM_VEICULOS_DISPChanged();
				}
			}
		}
		
		[Association(Name="CORPORACAO_CORPFOGO", Storage="_CORPFOGOs", OtherKey="COD_CORPORACAO")]
		public EntitySet<CORPFOGO> CORPFOGOs
		{
			get
			{
				return this._CORPFOGOs;
			}
			set
			{
				this._CORPFOGOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CORPFOGOs(CORPFOGO entity)
		{
			this.SendPropertyChanging();
			entity.CORPORACAO = this;
		}
		
		private void detach_CORPFOGOs(CORPFOGO entity)
		{
			this.SendPropertyChanging();
			entity.CORPORACAO = null;
		}
	}
}
#pragma warning restore 1591
